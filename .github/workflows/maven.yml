# This name will appear in the "Actions" tab of your GitHub repository.
name: Build and Push Docker Images

# This workflow runs automatically on any push to the "master" branch.
on:
  push:
    branches: [ "master" ]

jobs:
  # This job builds and pushes the backend API image.
  build_and_push_api:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using the secrets you created.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set up Docker Buildx for advanced build features.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build the API image and push it to Docker Hub.
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./src # Tells Docker to look for the Dockerfile in the 'api' directory.
          push: true
          # The image will be named 'thushanm/task-manager-api' with a 'latest' tag.
          tags: thushanm/task-manager-api:latest

  # This job builds and pushes the frontend image.
  build_and_push_frontend:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using the secrets you created.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set up Docker Buildx.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


